{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5b95c7c9_1e987d76",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1150933
      },
      "writtenOn": "2022-04-11T19:01:18Z",
      "side": 0,
      "message": "I\u0027m wondering if the word multiple refers to the fact that the cs-gpios property defines two GPIO descriptors on line 117. Does this comment need to be updated to reflect that one GPIO descriptor is being removed?",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbcb864e_b1bac25b",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-04-11T21:17:02Z",
      "side": 0,
      "message": "I think multiple here is referring to 2 touch chips. I tried to figure out what this panel_map comment means, but didn\u0027t find anything relevant. I had to remove the duplicate because the driver fails to register the spi master with it resulting in a failed probe and touch not working.",
      "parentUuid": "5b95c7c9_1e987d76",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f0216a7_756b1cfa",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-04-11T22:18:24Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "dbcb864e_b1bac25b",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c084e49_d1e27f16",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1150933
      },
      "writtenOn": "2022-04-11T23:57:40Z",
      "side": 0,
      "message": "We specify the two touch devices spitouch and spitouch1 on lines 119 and 131, respectively. I\u0027m wondering if the number of CS gpios has to match the number of SPI devices.\n\nIn the following change, they added spitouch1 as well as the two CS lines:\n\nhttps://android.googlesource.com/kernel/gs/+/807654cadd246e0b3ab79113a1b8667e416aef36%5E%21/#F0",
      "parentUuid": "4f0216a7_756b1cfa",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbb1d2b6_cdf93394",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-04-12T17:54:31Z",
      "side": 0,
      "message": "I don\u0027t see why it would have to match. When the master SPI controller registers itself, the core SPI driver parses the device tree and requests for the GPIOs. These GPIOs then are used by the touch drivers accordingly in spi_setup() and during SPI data transfers.",
      "parentUuid": "0c084e49_d1e27f16",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "686a975c_85fcb0f8",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1150933
      },
      "writtenOn": "2022-04-13T17:28:58Z",
      "side": 0,
      "message": "In spi_get_gpio_descs(), the number of GPIO descriptors found in the DT property cs-gpios is assigned to ctlr-\u003enum_chipselect. In of_spi_parse_dt(), the value of the property named reg (see lines 121 and 133 of this patch) is assigned to spi-\u003echip_select . Then, in spi_add_device(), it returns an error if spi-\u003echip_select \u003e\u003d ctlr-\u003enum_chipselect. Hence, I believe it\u0027ll fail to add the SPI device spitouch1:\n\n\t/* Chipselects are numbered 0..max; validate. */\n\tif (spi-\u003echip_select \u003e\u003d ctlr-\u003enum_chipselect) {\n\t\tdev_err(dev, \"cs%d \u003e\u003d max %d\\n\", spi-\u003echip_select,\n\t\t\tctlr-\u003enum_chipselect);\n\t\treturn -EINVAL;\n\t}\n\nWe are looking at two SPI devices here, spitouch and spitouch1, and we need two chip select lines to differentiate between the two.",
      "parentUuid": "bbb1d2b6_cdf93394",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "837d5cd2_232f0ec9",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-04-13T18:32:21Z",
      "side": 0,
      "message": "ah, I don\u0027t have an oriole to verify that, but I think if we just set line 133 to:\n\nreg \u003d \u003c0\u003e;\n\nthen that should work right? Maybe I can swap spitouch and spitouch1 to try and reproduce this on a raven.",
      "parentUuid": "686a975c_85fcb0f8",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f2aad7c_4e1a3af1",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-04-13T18:56:50Z",
      "side": 0,
      "message": "Thanks for finding this! I was able to reproduce it by setting reg \u003d \u003c1\u003e; for the first spitouch.\n\n```\n04-13 18:54:06.875     8     8 W s3c64xx-spi 10d40000.spi: spi bus clock parent not specified, using clock at index 0 as parent\n04-13 18:54:06.876     8     8 I s3c64xx-spi 10d40000.spi: set usi mode - 0x2 \n04-13 18:54:06.876     8     8 I s3c64xx-spi 10d40000.spi: Not using idle state \n04-13 18:54:06.876     8     8 I s3c64xx-spi 10d40000.spi: spi clkoff-time is empty(Default: 0ms)\n04-13 18:54:06.876     8     8 I s3c64xx-spi 10d40000.spi: PORT 11 fifo_lvl_mask \u003d 0x7f\n04-13 18:54:06.877     8     8 E s3c64xx-spi 10d40000.spi: cs1 \u003e\u003d max 1\n04-13 18:54:06.878     8     8 E spi_master spi11: spi_device register error /spi@10D40000/touchscreen@0\n04-13 18:54:06.878     8     8 W spi_master spi11: Failed to create SPI device for /spi@10D40000/touchscreen@0\n```\n\nI think setting both SPI devices to \"reg \u003d \u003c0\u003e;\" should be enough to fix this. I don\u0027t have an oriole to verify that, but am working on trying to get one.",
      "parentUuid": "837d5cd2_232f0ec9",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95de64f1_4045bf9a",
        "filename": "arch/arm64/boot/dts/google/gs101-common-touch.dtsi",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1150933
      },
      "writtenOn": "2022-04-13T19:12:04Z",
      "side": 0,
      "message": "I am afraid we might not be able to have two SPI devices with identical \"reg\" values. We might run into this code in spi_add_device:\n\n\t/* We need to make sure there\u0027s no other device with this\n\t * chipselect **BEFORE** we call setup(), else we\u0027ll trash\n\t * its configuration.  Lock against concurrent add() calls.\n\t */\n\tmutex_lock(\u0026spi_add_lock);\n\n\tstatus \u003d bus_for_each_dev(\u0026spi_bus_type, NULL, spi, spi_dev_check);\n\tif (status) {\n\t\tdev_err(dev, \"chipselect %d already in use\\n\",\n\t\t\t\tspi-\u003echip_select);\n\t\tgoto done;\n\t}\n\n\nI suggest we just remove spitouch1 for now and ask the author of https://android.googlesource.com/kernel/gs/+/807654cadd246e0b3ab79113a1b8667e416aef36%5E%21/#F0 to find a different solution.",
      "parentUuid": "837d5cd2_232f0ec9",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "0a5366d6dcb066f70f815ba057621ed195a9ddba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}